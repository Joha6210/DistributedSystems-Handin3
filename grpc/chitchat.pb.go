// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: chitchat.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Message struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"` // user id
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Clock         int32                  `protobuf:"varint,3,opt,name=clock,proto3" json:"clock,omitempty"` //Logical clock
	Username      string                 `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Timestamp     string                 `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_chitchat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_chitchat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_chitchat_proto_rawDescGZIP(), []int{0}
}

func (x *Message) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Message) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Message) GetClock() int32 {
	if x != nil {
		return x.Clock
	}
	return 0
}

func (x *Message) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Message) GetTimestamp() string {
	if x != nil {
		return x.Timestamp
	}
	return ""
}

type Response struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        bool                   `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	Clock         int32                  `protobuf:"varint,3,opt,name=clock,proto3" json:"clock,omitempty"` //Logical clock
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_chitchat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_chitchat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_chitchat_proto_rawDescGZIP(), []int{1}
}

func (x *Response) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

func (x *Response) GetClock() int32 {
	if x != nil {
		return x.Clock
	}
	return 0
}

type Client struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Username      string                 `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Clock         int32                  `protobuf:"varint,3,opt,name=clock,proto3" json:"clock,omitempty"` //Logical clock
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Client) Reset() {
	*x = Client{}
	mi := &file_chitchat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_chitchat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_chitchat_proto_rawDescGZIP(), []int{2}
}

func (x *Client) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Client) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Client) GetClock() int32 {
	if x != nil {
		return x.Clock
	}
	return 0
}

var File_chitchat_proto protoreflect.FileDescriptor

const file_chitchat_proto_rawDesc = "" +
	"\n" +
	"\x0echitchat.proto\"\x87\x01\n" +
	"\aMessage\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x14\n" +
	"\x05clock\x18\x03 \x01(\x05R\x05clock\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\tR\ttimestamp\"8\n" +
	"\bResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\bR\x06result\x12\x14\n" +
	"\x05clock\x18\x03 \x01(\x05R\x05clock\"N\n" +
	"\x06Client\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x1a\n" +
	"\busername\x18\x02 \x01(\tR\busername\x12\x14\n" +
	"\x05clock\x18\x03 \x01(\x05R\x05clock2v\n" +
	"\bChitChat\x12%\n" +
	"\x0ePublishMessage\x12\b.Message\x1a\t.Response\x12 \n" +
	"\tSubscribe\x12\a.Client\x1a\b.Message0\x01\x12!\n" +
	"\vUnsubscribe\x12\a.Client\x1a\t.ResponseB\x03Z\x01.b\x06proto3"

var (
	file_chitchat_proto_rawDescOnce sync.Once
	file_chitchat_proto_rawDescData []byte
)

func file_chitchat_proto_rawDescGZIP() []byte {
	file_chitchat_proto_rawDescOnce.Do(func() {
		file_chitchat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chitchat_proto_rawDesc), len(file_chitchat_proto_rawDesc)))
	})
	return file_chitchat_proto_rawDescData
}

var file_chitchat_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_chitchat_proto_goTypes = []any{
	(*Message)(nil),  // 0: Message
	(*Response)(nil), // 1: Response
	(*Client)(nil),   // 2: Client
}
var file_chitchat_proto_depIdxs = []int32{
	0, // 0: ChitChat.PublishMessage:input_type -> Message
	2, // 1: ChitChat.Subscribe:input_type -> Client
	2, // 2: ChitChat.Unsubscribe:input_type -> Client
	1, // 3: ChitChat.PublishMessage:output_type -> Response
	0, // 4: ChitChat.Subscribe:output_type -> Message
	1, // 5: ChitChat.Unsubscribe:output_type -> Response
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_chitchat_proto_init() }
func file_chitchat_proto_init() {
	if File_chitchat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chitchat_proto_rawDesc), len(file_chitchat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chitchat_proto_goTypes,
		DependencyIndexes: file_chitchat_proto_depIdxs,
		MessageInfos:      file_chitchat_proto_msgTypes,
	}.Build()
	File_chitchat_proto = out.File
	file_chitchat_proto_goTypes = nil
	file_chitchat_proto_depIdxs = nil
}
